{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DT_Input",
						"type": "DatasetReference"
					},
					"name": "MoviesSource1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Output",
						"type": "DatasetReference"
					},
					"name": "sinkYear"
				}
			],
			"transformations": [
				{
					"name": "FilterYear"
				},
				{
					"name": "RomCom"
				},
				{
					"name": "RottenTomatoes"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Film as string,",
				"          Genre as string,",
				"          {Lead Studio} as string,",
				"          {Audience score %} as string,",
				"          Profitability as string,",
				"          {Rotten Tomatoes %} as string,",
				"          {Worldwide Gross} as string,",
				"          Year as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesSource1",
				"MoviesSource1 filter(toInteger(Year)>=2000 && toInteger(Year)<=2010) ~> FilterYear",
				"FilterYear filter(toString(Genre)== \"Comedy\" || toString(Genre)== \"Romance\") ~> RomCom",
				"RomCom filter(toFloat({Rotten Tomatoes %})>50) ~> RottenTomatoes",
				"RottenTomatoes sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Film as string,",
				"          Genre as string,",
				"          {Lead Studio} as string,",
				"          {Audience score %} as string,",
				"          Profitability as string,",
				"          {Rotten Tomatoes %} as string,",
				"          {Worldwide Gross} as string,",
				"          Year as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkYear"
			]
		}
	}
}